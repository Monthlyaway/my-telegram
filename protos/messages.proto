syntax = "proto3";

// Echo request and response messages
message EchoRequest {
    string content = 1;
}

message EchoResponse {
    string content = 1;
}

// User registration messages
message RegisterRequest {
    string username = 1;
    string password = 2;
}

message RegisterResponse {
    bool success = 1;
    string message = 2;
    int64 user_id = 3;  // Only set if success is true
}

// User login messages
message LoginRequest {
    string username = 1;
    string password = 2;
}

message LoginResponse {
    bool success = 1;
    string message = 2;
    int64 user_id = 3;      // Only set if success is true
    string username = 4;    // Only set if success is true
}

// Error response message
message ErrorResponse {
    uint32 error_code = 1;
    string message = 2;
    // =3是第三个字段
    map<string, string> details = 3;  // Additional error details
}

// Main packet wrapper
message Packet {
    uint32 version = 1;      // Protocol version, current version is 1

    // sequence 的作用主要是 请求-响应的匹配。详细解释如下：
    // 当客户端发送多个请求给服务端时，每个请求都会带上一个 唯一的 sequence 编号。
    // 服务端在回应时会把同样的 sequence 放回响应里
    uint32 sequence = 2;     // Optional sequence number for request-response matching
    
    // oneof 意思是 同一时间 payload 只能包含其中的一个字段。
    // 这里的 = 不是给字段赋值，而是 字段编号（tag）：
    // protobuf 编码时，字段编号用于标识字段，不同的编号保证反序列化时可以正确解析。
    // 编号可以任意，只要在同一个消息里不重复即可。

    oneof payload {
        // System messages (1-99)
        EchoRequest echo_request = 10;
        EchoResponse echo_response = 11;
        
        // User system messages (100-199)
        RegisterRequest register_request = 100;
        RegisterResponse register_response = 101;
        LoginRequest login_request = 102;
        LoginResponse login_response = 103;
        
        // Error response (999)
        ErrorResponse error = 999;
    }
}